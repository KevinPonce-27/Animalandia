<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAoJ+fAJ+fngCenZ0Al5eXAJaWlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABxd3YALD4/AFRfYABDTlIAR05UAFtgYwCgo50Ab3N0AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        tYFen7vhSZGx/zeDp/81gab/Qoyx/1eZte9bhZ5uNBQiAlJjdgAAAAAAlp2gAIqlswCMoq0AkK+/AJK1
        wgCLqLUAmKCkAJSkqwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAImV
        lwBkl6cAbpekAP9rMgGGrLwqfrPGbHy0ypiAtcqnf7PIj4KpuEShn6EEaH+OAEhdcAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACTk5YAgZqpAIaVoQB/qbsAbbXOAP/bAADYsZkDAMT/AHimuQB/laAAfZilAKWi
        sQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJiWlACcqq4An6quAJiqsACXqbAAmqqwALlx
        WwCdo6YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD/wf8A//8AAP/B/gA//wAA/8A+AA//AAD/wAYAB/8AAP/AAAAD/wAA/8AAAAP/AAD/wAAAA/8AAP/4
        AAAB/wAA//8AAAH/AADwfgAAAf8AAPAeAAAB/wAA8AAAAAH/AADwAAAAAf8AAPAAAAAB/wAA8AAAAAB/
        AADwAAAAAB8AAPAAAAAADwAA8AAAAAAHAADwAAAAAAcAAPgAAAAAAwAA+AAAAAADAAD+AAAAAAMAAP4A
        AAAAAQAA/AAAAAABAAD4AAAAAAEAAPgAAAAAAQAA+AAAAAABAAD4AAAAAAEAAPgAAAAAAwAA+AAAAAAD
        AAD4AAAAAD8AAPgAAAAAPwAA+AAAAAA/AAD4AAAAAD8AAPwAAAAAPwAA/AAAAAA/AAD+AAAAAD8AAP8A
        AAAAfwAA//4AAAB/AAD//wAAAP8AAP//AAIB/wAA//+AA///AAD//8AD//8AAP//8A///wAA////////
        AAA=
</value>
  </data>
</root>